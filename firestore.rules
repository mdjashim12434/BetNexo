
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(uid) {
      return isSignedIn() && request.auth.uid == uid;
    }

    function getRole(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data.role;
    }

    function isAdmin() {
      return isSignedIn() && getRole(request.auth.uid) == 'Admin';
    }

    function getUserCustomId(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data.customUserId;
    }

    // Collection Rules
    match /users/{uid} {
      allow read: if isOwner(uid) || isAdmin();
      allow create: if isOwner(uid) && !exists(/databases/$(database)/documents/users/$(uid));
      // User cannot change their own role. Admin can change anything.
      allow update: if (isOwner(uid) && request.resource.data.role == resource.data.role) || isAdmin();
      allow delete: if isAdmin();
    }

    match /bets/{betId} {
      // A user can create a bet if the `userId` in the bet document matches their own `customUserId`.
      allow create: if isSignedIn() && request.resource.data.userId == getUserCustomId(request.auth.uid);
      
      // A user can read a bet if the `userId` in the bet matches their own `customUserId`. Admins can read any bet.
      allow read: if isAdmin() || (isSignedIn() && resource.data.userId == getUserCustomId(request.auth.uid));
      
      // Bets cannot be updated or deleted by clients. This should be handled by a server process.
      allow update, delete: if false;
    }

    match /transactions/{transactionId} {
      // A user can create a transaction if the `userId` in the transaction doc matches their own `customUserId`.
      allow create: if isSignedIn() && request.resource.data.userId == getUserCustomId(request.auth.uid);
      
      // Only admins can read the full list of transactions. Users can read their own specific transactions if they have the ID.
      allow read: if isAdmin() || (isSignedIn() && resource.data.userId == getUserCustomId(request.auth.uid));

      // Only admins can update (approve/reject) transactions.
      allow update: if isAdmin();

      // Transactions cannot be deleted by clients.
      allow delete: if false;
    }

    match /paymentMethods/{methodId} {
      // Any signed-in user can read the available payment methods.
      allow read: if isSignedIn();
      // Only admins can create, update, or delete payment methods.
      allow write: if isAdmin();
    }
  }
}
